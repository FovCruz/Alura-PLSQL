CREATE OR REPLACE PROCEDURE SP_PRINCIPAL_BANKSOLUTION(P_ANNO_MES NUMBER)
IS
    R_DETALLE_CREDITOS_MENSUALES DETALLE_CREDITOS_MENSUALES%ROWTYPE;
    CURSOR C_DETALLE IS
        SELECT CC.FECHA_OTORGA_CRED,CC.ID_SUCURSAL,
               C.NRO_CLIENTE, C.NUMRUN RUN_CLIENTE, 
               C.PNOMBRE||' '||C.SNOMBRE||' '||C.APPATERNO||' '||C.APMATERNO NOMBRE_CLIENTE,
               CC.NRO_SOLIC_CREDITO,CR.NOMBRE_CREDITO,CC.MONTO_SOLICITADO,CC.MONTO_CREDITO MONTO_TOTAL_CREDITO,
               CC.TOTAL_CUOTAS_CREDITO NRO_TOTAL_CUOTAS    
        FROM CLIENTE C
            JOIN CREDITO_CLIENTE CC
                ON (C.NRO_CLIENTE = CC.NRO_CLIENTE)
            JOIN CREDITO CR
                ON (CC.COD_CREDITO = CR.COD_CREDITO)
        WHERE TO_CHAR(CC.FECHA_OTORGA_CRED,'YYYYMM') = TO_CHAR(ADD_MONTHS(TO_DATE(P_ANNO_MES,'YYYYMM'),-1),'YYYYMM')
        ORDER BY CC.FECHA_OTORGA_CRED;
        
       CURSOR C_RESUMEN IS
        SELECT CC.FECHA_OTORGA_CRED,
               SUM(CC.MONTO_SOLICITADO) MONTO_TOTAL_SOLICITADO,
               SUM(CC.MONTO_CREDITO) MONTO_TOTAL_CREDITO
        FROM CREDITO_CLIENTE CC
        WHERE TO_CHAR(CC.FECHA_OTORGA_CRED,'YYYYMM') = TO_CHAR(ADD_MONTHS(TO_DATE(201901,'YYYYMM'),-1),'YYYYMM')
        GROUP BY CC.FECHA_OTORGA_CRED
        ORDER BY CC.FECHA_OTORGA_CRED;
        
        V_MONTO_TOTAL_SBIF RESUMEN_CREDITOS_MENSUALES.MONTO_TOTAL_SBIF%TYPE;
        
BEGIN

    FOR R_DETALLE IN C_DETALLE LOOP

        R_DETALLE_CREDITOS_MENSUALES.CORRELATIVO:=SEQ_DET_CREDITOS_MENSUALES.NEXTVAL;
        R_DETALLE_CREDITOS_MENSUALES.MESS_ANNO_PROCESO:=P_ANNO_MES;
        R_DETALLE_CREDITOS_MENSUALES.FECHA_OTORGA_CREDITO:=R_DETALLE.FECHA_OTORGA_CRED;
        R_DETALLE_CREDITOS_MENSUALES.ID_SUCURSAL:=R_DETALLE.ID_SUCURSAL;
 --     R_DETALLE_CREDITOS_MENSUALES.REGION:= FN_OBT_REGION();
  --    R_DETALLE_CREDITOS_MENSUALES.PROVINCIA:= FN_OBT_PROVINCIA();     
   --   R_DETALLE_CREDITOS_MENSUALES.COMUNA:= FN_OBT_COMUNA();      
        R_DETALLE_CREDITOS_MENSUALES.NRO_SOLIC_CREDITO:=R_DETALLE.NRO_SOLIC_CREDITO;
        R_DETALLE_CREDITOS_MENSUALES.TIPO_CREDITO:=R_DETALLE.TIPO_CREDITO;        
        R_DETALLE_CREDITOS_MENSUALES.NRO_CLIENTE:=R_DETALLE.NRO_CLIENTE;      
        R_DETALLE_CREDITOS_MENSUALES.RUN_CLIENTE:=R_DETALLE.RUN_CLIENTE;      
        R_DETALLE_CREDITOS_MENSUALES.NOMBRE_CLIENTE:=R_DETALLE.NOMBRE_CLIENTE;  
        R_DETALLE_CREDITOS_MENSUALES.MONTO_SOLICITADO:=R_DETALLE.MONTO_SOLICITADO;  
        R_DETALLE_CREDITOS_MENSUALES.MONTO_TOTAL_CREDITO:=R_DETALLE.MONTO_TOTAL_CREDITO;      
        R_DETALLE_CREDITOS_MENSUALES.NRO_TOTAL_CUOTAS:=R_DETALLE.NRO_TOTAL_CUOTAS;
--      R_DETALLE_CREDITOS_MENSUALES.VENCIMIENTO_PRIMERA_CUOTA:=FN_PRIMERA_CUOTA();
--      R_DETALLE_CREDITOS_MENSUALES.VENCIMIENTO_ULTIMA_CUOTA:=FN_ULTIMA_CUOTA();
        
        CASE 
        WHEN R_DETALLE.MONTO_TOTAL_CREDITO BETWEEN 100000 AND 1000000 
                THEN R_DETALLE_CREDITOS_MENSUALES.MONTO_CORRESPONDE_SBIF:=R_DETALLE_CREDITOS_MENSUALES.MONTO_TOTAL_CREDITO*0.01;
        WHEN R_DETALLE.MONTO_TOTAL_CREDITO BETWEEN 1000001 AND 2000000 
                THEN R_DETALLE_CREDITOS_MENSUALES.MONTO_CORRESPONDE_SBIF:=R_DETALLE_CREDITOS_MENSUALES.MONTO_TOTAL_CREDITO*0.02;
        WHEN R_DETALLE.MONTO_TOTAL_CREDITO BETWEEN 2000001 AND 4000000 
                THEN R_DETALLE_CREDITOS_MENSUALES.MONTO_CORRESPONDE_SBIF:=R_DETALLE_CREDITOS_MENSUALES.MONTO_TOTAL_CREDITO*0.03;
        WHEN R_DETALLE.MONTO_TOTAL_CREDITO BETWEEN 4000001 AND 6000000 
                THEN R_DETALLE_CREDITOS_MENSUALES.MONTO_CORRESPONDE_SBIF:=R_DETALLE_CREDITOS_MENSUALES.MONTO_TOTAL_CREDITO*0.04;
        WHEN R_DETALLE.MONTO_TOTAL_CREDITO > 6000000
                THEN R_DETALLE_CREDITOS_MENSUALES.MONTO_CORRESPONDE_SBIF:=R_DETALLE_CREDITOS_MENSUALES.MONTO_TOTAL_CREDITO*0.07;         
        END CASE;
        
        INSERT INTO DETALLE_CREDITOS_MENSUALES VALUES R_DETALLE_CREDITOS_MENSUALES;
        
    END LOOP;
    
    FOR R_RESUMEN IN C_RESUMEN LOOP
    
                CASE 
        WHEN R_RESUMEN.MONTO_TOTAL_CREDITO BETWEEN 100000 AND 1000000 
                THEN V_MONTO_TOTAL_SBIF:=R_RESUMEN.MONTO_TOTAL_CREDITO*0.01;
        WHEN R_RESUMEN.MONTO_TOTAL_CREDITO BETWEEN 1000001 AND 2000000 
                THEN V_MONTO_TOTAL_SBIF:=R_RESUMEN.MONTO_TOTAL_CREDITO*0.02;
        WHEN R_RESUMEN.MONTO_TOTAL_CREDITO BETWEEN 2000001 AND 4000000 
                THEN V_MONTO_TOTAL_SBIF:=R_RESUMEN.MONTO_TOTAL_CREDITO*0.03;
        WHEN R_RESUMEN.MONTO_TOTAL_CREDITO BETWEEN 4000001 AND 6000000 
                THEN V_MONTO_TOTAL_SBIF:=R_RESUMEN.MONTO_TOTAL_CREDITO*0.04;
        WHEN R_RESUMEN.MONTO_TOTAL_CREDITO > 6000000
                THEN V_MONTO_TOTAL_SBIF:=R_RESUMEN.MONTO_TOTAL_CREDITO*0.07;         
        END CASE;
    
        INSERT INTO RESUMEN_CREDITOS_MENSUALES 
            VALUES (SEQ_RES_CREDITOS_MENSUALES.NEXTVAL,P_ANNO_MES,R_RESUMEN.FECHA_OTORGA_CREDITO,
                    R_RESUMEN.MONTO_TOTAL_SOLICITADO,R_RESUMEN.MONTO_TOTAL_CREDITO,V_MONTO_TOTAL_SBIF);
    
    END LOOP;
    COMMIT;
END SP_PRINCIPAL_BANKSOLUTION;